---
- name: Ensure nginx is installed
  ansible.builtin.package:
    name: nginx
    state: latest

- name: Ensure nginx is started at boot
  ansible.builtin.service:
    name: nginx
    enabled: true
    state: started

- name: Copy HTTPS configuration file
  ansible.builtin.copy:
    src: https.conf
    dest: /etc/nginx/conf.d/https.conf
    owner: root
    group: root
    mode: '0644'
#    notify: Reload nginx

- name: Create a directory
  ansible.builtin.file:
    path: /var/www/example.internal/html/
    state: directory
    mode: '0755'
    seuser: system_u
    setype: httpd_sys_content_t

- name: Copy index file
  ansible.builtin.copy:
    src: files/index.html
    dest: /var/www/example.internal/html/index.html
    owner: root
    group: root
    mode: '0644'
    seuser: system_u
    setype: httpd_sys_content_t
#    notify: Reload nginx

- name: Ensure the nginx configuration is updated for example.internal
  ansible.builtin.template:
    src: templates/example.internal.conf.j2
    dest: /etc/nginx/conf.d/example.internal.conf
 #   notify: Reload nginx

#- name: Restart nginx to apply new configuration
 # ansible.builtin.service:
  #  name: nginx
   # state: restarted
    #when: http_file.changed or index_file.changed or nginx_conf.changed

- name: Ensure user accounts exist
  ansible.builtin.user:
    name: "{{ item.name }}"
    comment: "{{  item.comment }}"
    state: present
  loop: "{{ users }}"

- name: Ensure users are added to their respective groups
  ansible.builtin.user:
    name: "{{ item.name }}"
    groups: "{{ item.groups }}"
    append: true
  loop: "{{ users }}"
